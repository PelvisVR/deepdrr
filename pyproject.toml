[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "deepdrr"
version = "1.1.2"
license = "GPL-3.0-or-later"
# dynamic = ["version"]
readme = "README.md"
urls = { homepage = "https://github.com/arcadelab/deepdrr" }
description = "A Catalyst for Machine Learning in Fluoroscopy-guided Procedures."
authors = [
    { name = "Benjamin D. Killeen", email = "killeen@jhu.edu" },
]
# classifiers = [
#     "Development Status :: 3 - Alpha",
#     "Intended Audience :: Developers",
#     "Programming Language :: Python",
#     "Programming Language :: Python :: 3",
#     "Programming Language :: Python :: 3.8",
#     "Programming Language :: Python :: 3.9",
#     "Programming Language :: Python :: 3.10",
#     "Programming Language :: Python :: 3.11",
#     "Operating System :: OS Independent",
# ]

dependencies = [
    "numpy",
    "torch",
    "torchvision",
    "nibabel",
    "scipy",
    "scikit-image",
    "pyvista",
    "pydicom",
    "pynrrd",
    "rich",
    "opencv-python",
    "seaborn",
    "graphviz",
    "pyglet>=1.4.11",
    "PyOpenGL>=3.1.7",
    "PyOpenGL_accelerate>=3.1.7",
    "trimesh",
    "pyrender @ git+https://github.com/liamjwang/pyrender.git@master",
    "cuda-python",
]

[project.optional-dependencies]
dev = [
    "black[jupyter]",
    "pytest",
    "trame",
    "ruff",
    "jupyterlab",
    "ipykernel",
    "ipywidgets",
]
cuda102 = [ "cupy-cuda102" ]
cuda110 = [ "cupy-cuda110" ]
cuda111 = [ "cupy-cuda111" ]
cuda11x = [ "cupy-cuda11x" ]
cuda12x = [ "cupy-cuda12x" ]

# docs = [
#     "Sphinx",
#     "sphinx-autobuild",
#     "sphinx-js",
#     "markupsafe==2.0.1",
# ]

[tool.hatch.metadata]
allow-direct-references = true # TODO: remove this when pyrender is updated

[tool.hatch.build]
sources = ["."]

# [tool.hatch.version]
# source = "vcs"

[tool.hatch.envs.default]
features = ["dev"]

[tool.hatch.envs.default.scripts]
fix = "black . && ruff --fix ."
lint = "black --check . && ruff ."
test = "pytest ."

# [tool.hatch.envs.docs]
# features = ["docs"]

# [tool.hatch.envs.docs.scripts]
# build = "sphinx-build -b html ./docs ./docs/_build/html"
# serve = "cd docs && ./serve.sh"

# [[tool.hatch.envs.test.matrix]]
# python = ["38", "39", "310", "311"]

[tool.ruff]
line-length = 120
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "temp",
]
format = "grouped"
# format = "pylint"
ignore = [
    # "E731", # do not assign a lambda expression, use a def
    # "W504", # line break after binary operator
    # "F401", # imported but unused
    # "F841", # local variable is assigned to but never used
    # "W605" # invalid escape sequence
]

target-version = "py310"
extend-select = [
    "E",  # style errors
    # "D",  # pydocstyle
    "F",  # pyflakes
    "I",  # isort
    "RUF", # ruff-specific rules
    "UP", # pyupgrade
    "W",  # style warnings
]

[tool.black]
line-length = 120
# target-version = ['py37']

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F403", # unused-star-used
    "F401", # unused import
]

[tool.ruff.isort]
known-first-party = ["deepdrr"]

[tool.pytest.ini_options]
norecursedirs = [
    ".git",
    "dist",
    "build"
]

addopts = [
    "--strict",
    "--doctest-modules",
    "--durations=0"
]

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no-cover",
    "pass"
]



[tool.check-manifest]
ignore = [
    "*.yml",
    ".github",
    ".github/*",
]